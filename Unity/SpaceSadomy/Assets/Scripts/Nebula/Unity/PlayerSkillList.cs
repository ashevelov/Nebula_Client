// ------------------------------------------------------------------------------
//  <autogenerated>
//      This code was generated by a tool.
//      Mono Runtime Version: 4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if 
//      the code is regenerated.
//  </autogenerated>
// ------------------------------------------------------------------------------
using Common;
using Nebula;
using Game.Space;
using Nebula.UI;
using System.Collections;
using UnityEngine;
using ServerClientCommon;
using Nebula.Mmo.Games;
using Nebula.Test;
using Nebula.Resources;
using Nebula.Mmo.Items;
using Nebula.Effects;


public class PlayerSkillList
{
	private struct TransUnion
	{
		public TransUnion(Vector3 p, Quaternion r)
		{
			mPos = p;
			mRot = r;
		}
		public Vector3    GetPos()		 {return mPos;}
		public Quaternion GetRot() 	     {return mRot;}

		private Vector3 	mPos;
		private Quaternion  mRot;
	}

	private static GameObject GetFireSlot(ShipModel shipModel, Vector3 targ)
	{
		int 	  randX  	= Random.Range(0,shipModel.GetModules().Count);
		
		ShipModule module	= shipModel.GetModule(4);
		
		if (module == null)
			return null;
		
		GameObject fireSlot = module.GetFireSlot(targ);
		
		return fireSlot;
	}

	private static TransUnion GetFireTransform(ShipModel shipModel, Vector3 targ)
	{
		GameObject fireSlot = GetFireSlot(shipModel, targ);
		
		Vector3     startPos;
		Quaternion  startRot;
		
		if (fireSlot == null)
		{
			startPos = shipModel.transform.position;
			startRot = shipModel.transform.rotation;
		}else
		{
			startPos = fireSlot.transform.position;
			startRot = fireSlot.transform.rotation;
		}

		TransUnion union = new TransUnion(startPos, startRot);

		return union;
	}

	private static IEnumerator HumanSkill2T(float timer, Item item, GameObject targetItem, float angl)
	{
		yield return new WaitForSeconds(timer);
		HumanSkill2Call(item, targetItem,angl);
	}

	private static void HumanSkill2Call(Item item, GameObject targetItem, float angl)
	{
		ShipModel shipModel = item.GetShipModel();
		
		TransUnion trans =
			GetFireTransform(shipModel, targetItem.transform.position);

		GameObject effectInstance =
		MonoBehaviour.Instantiate(PrefabCache.Get("Effects/Beam_pre3"), trans.GetPos(), trans.GetRot()) as GameObject;
			
		BulletSecondPhase secondPhase = effectInstance.GetComponentInChildren<BulletSecondPhase>();
		secondPhase.Init(effectInstance.GetChildrenWithName("BulletSecondPhase"), BulletType.magnito);
		secondPhase.SetTargetOffset(new Vector3(Random.Range(-2,2),Random.Range(-2,2),Random.Range(-2,2)));	

		BulletFirstPhaseHuman1 firstPhase = effectInstance.GetComponentInChildren<BulletFirstPhaseHuman1>();
		firstPhase.StartPhase(1.0f,secondPhase,1.5f,targetItem);
		firstPhase.SetDelayToLook(0.5f);
		firstPhase.transform.Rotate(new Vector3(0,1,0),angl);
	}

	public static void HumanSkill2(BaseSpaceObject baseClass, Item item, GameObject targetItem)
	{
		float[] angls= new float[5];
		int indx = 0;

		for (int i=-2;i<3;i++)
		{
			//circ[indx].y = radius*Mathf.Sin(angel*Mathf.Deg2Rad);
			//circ[indx].x = radius*Mathf.Cos(angel*Mathf.Deg2Rad);
			angls[indx] = i*27.5f;
			indx++;
		}

		baseClass.StartCoroutine(HumanSkill2T(0.25f,item,targetItem,angls[0]));
		baseClass.StartCoroutine(HumanSkill2T(0.40f,item,targetItem,angls[1]));
		HumanSkill2Call(item,targetItem,angls[2]);
		baseClass.StartCoroutine(HumanSkill2T(0.40f,item,targetItem,angls[3]));
		baseClass.StartCoroutine(HumanSkill2T(0.25f,item,targetItem,angls[4]));
	}

	public static void HumanSkill1( Item item, GameObject targetItem)
	{
		ShipModel shipModel = item.GetShipModel();
	
		TransUnion trans =
		GetFireTransform(shipModel, targetItem.transform.position);

		GameObject effectInstance =
			(MonoBehaviour.Instantiate(PrefabCache.Get("Effects/Beam_pre2"), trans.GetPos(), trans.GetRot())) as GameObject;
			
		BulletSecondPhase secondPhase = effectInstance.GetComponentInChildren<BulletSecondPhase>();
		secondPhase.Init(effectInstance.GetChildrenWithName("BulletSecondPhase"),BulletType.explosion);
			
		BulletFirstPhaseHuman1 firstPhase = effectInstance.GetComponentInChildren<BulletFirstPhaseHuman1>();
		firstPhase.StartPhase(1.0f,secondPhase,1.5f,targetItem);
		firstPhase.SetDelayToLook(0.5f);

	}

	public static ShieldEffect HumanSkill3( Item item)
	{
		ShipModel shipModel = item.GetShipModel();

		GameObject effectInstance =
			(MonoBehaviour.Instantiate(PrefabCache.Get("Effects/SkillShield"),shipModel.transform.position, shipModel.transform.rotation)) as GameObject;

		ShieldEffect shield = effectInstance.GetComponentInChildren<ShieldEffect>();
		shield.Init(10);
		shield.transform.parent = shipModel.gameObject.transform;
		//secondPhase.Init(effectInstance.GetChildrenWithName("BulletSecondPhase"),BulletType.explosion);


		return shield;
	}

	public static void HumanSkill4( Item item)
	{
		ShipModel shipModel = item.GetShipModel();
		
		GameObject effectInstance =
			(MonoBehaviour.Instantiate(PrefabCache.Get("Effects/SkillSpeed"),shipModel.transform.position, shipModel.transform.rotation)) as GameObject;


		SpeedEffect speed = effectInstance.GetComponentInChildren<SpeedEffect>();
		speed.Init(item.View);
		speed.transform.parent = shipModel.gameObject.transform;
		speed.transform.Rotate(new Vector3(1,0,0),180.0f,UnityEngine.Space.Self);
		//secondPhase.Init(effectInstance.GetChildrenWithName("BulletSecondPhase"),BulletType.explosion);

	}

	public static void HumanSkill5( Item item)
	{
		/*Material mat = new Material(Resources.Load("Effects/SkillHeal") as Material);

		ShipModel shipModel   = item.GetShipModel();
		ArrayList shipModules =  shipModel.GetModules();

		for (int i=0;i<shipModules.Count;i++)
		{
			Renderer objR = shipModel.GetModule(i).GetModel().GetChildrenWithName("model").GetComponent<Renderer>();

			Material[] newMat = new Material[objR.materials.Length+1];
			
			objR.materials.CopyTo(newMat, 0);
			newMat[1] = mat;
			objR.materials = newMat;

		}*/

		ShipModel shipModel   = item.GetShipModel();

		GameObject go = PrefabCache.Get("Effects/SkillHeal") as GameObject;
		if (go != null)
		{
			GameObject inst = MonoBehaviour.Instantiate(go) as GameObject;
			inst.transform.parent = shipModel.transform;
			HealEffect _eff =  inst.GetComponent<HealEffect>();
			_eff.Init(item);
		}
		else 
		{
			Debug.Log("game object not found");
		}


	}
}


